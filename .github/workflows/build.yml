# 工作流名称
name: Build and Release APK

# 触触发工作流的条件：master分支有push事件时触发
on:
  push:
    branches:
      - master

# 定义工作
jobs:
  # 构建APK的工作
  build:
    name: Build APK
    runs-on: ubuntu-latest # 指定运行环境

    steps:
      - name: Checkout code # 检出代码
        uses: actions/checkout@v4

      - name: Setup Flutter # 设置Flutter环境
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.x" # 请根据需要选择合适的Flutter版本

      - name: Decode keystore
        run: |
          echo ${{ secrets.KEYSTORE }} | base64 --decode > ${{ github.workspace }}/android/app/keystore.jks
        shell: bash

      - name: Build APK # 构建发布版APK，为不同的ABI平台生成不同的APK
        run: |
          flutter pub get
          flutter build apk --release --split-per-abi
        env:
          KEYALIAS: ${{ secrets.KEYALIAS }}
          KEYPASSWORD: ${{ secrets.KEYPASSWORD }}
          STOREPASSWORD: ${{ secrets.STOREPASSWORD }}

      - name: Upload APKs to Artifacts # 将构建的多个APK上传为工件
        uses: actions/upload-artifact@v2
        with:
          name: app-release-apks
          path: build/app/outputs/flutter-apk/*-release.apk

  # 发布APK的工作
  release:
    name: Release APK
    needs: build # 该工作依赖于成功完成的构建工作
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' # 运行该工作的条件
    permissions:
      contents: write
    steps:
      - name: Download APKs from Artifacts # 从工件中下载多个APK
        uses: actions/download-artifact@v2
        with:
          name: app-release-apks
          path: release

      - name: Create Release # 创建GitHub发布
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 使用GitHub令牌进行认证
        with:
          tag_name: ${{ github.run_number }} # 使用运行编号作为标签名称
          release_name: Release ${{ github.run_number }} # 设置发布名称
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: true

      - name: Upload APKs to Release # 将多个APK上传到创建的GitHub发布中
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/*-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive