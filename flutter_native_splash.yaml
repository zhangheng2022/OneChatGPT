flutter_native_splash:
  # 此包生成原生代码，用于自定义 Flutter 默认的白色原生启动画面
  # 可以设置背景颜色和启动画面图片。
  # 自定义以下参数，并在终端中运行以下命令：
  # dart run flutter_native_splash:create
  # 要恢复 Flutter 默认的白色启动画面，请在终端中运行以下命令：
  # dart run flutter_native_splash:remove

  # 重要提示：这些参数不会影响 Android 12 及更高版本的配置，
  # 这些版本处理启动画面与之前的 Android 版本不同。Android 12 及更高版本
  # 必须在下面的 android_12 部分中单独配置。

  # color 或 background_image 是唯一必需的参数。使用 color 将启动画面背景
  # 设置为纯色。使用 background_image 将启动画面背景设置为 png 图片。
  # 这对渐变很有用。图片会被拉伸到应用程序的大小。只能使用一个参数，
  # color 和 background_image 不能同时设置。
  color: "#ffffff"
  #background_image: "assets/background.png"

  # 可选参数列在下面。要启用参数，请取消注释该行，
  # 方法是删除开头的 # 字符。

  # image 参数允许您指定在启动画面中使用的图片。它必须是一个
  # png 文件，并且应调整大小以适合 4x 像素密度。
  image: assets/logos/splash_logo.png

  # branding 属性允许您指定在启动画面中用作品牌标识的图片。
  # 它必须是一个 png 文件。它支持 Android、iOS 和 Web。对于 Android 12，
  # 请参见下面的 Android 12 部分。
  #branding: assets/dart.png

  # 要将品牌标识图片放置在屏幕底部，您可以使用 bottom、bottomRight、
  # 和 bottomLeft。如果未指定或指定其他内容，则默认值为 bottom。
  #branding_mode: bottom

  # 设置品牌标识图片距离屏幕底部的间距。默认值为 0
  # branding_bottom_padding: 24

  # color_dark、background_image_dark、image_dark、branding_dark 是当设备处于深色模式时
  # 设置背景和图片的参数。如果未指定，应用程序将使用上面的参数。
  # 如果指定了 image_dark 参数，则必须指定 color_dark 或
  # background_image_dark。color_dark 和 background_image_dark 不能同时设置。
  #color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png
  #branding_dark: assets/dart_dark.png

  # 从 Android 12 开始，启动画面的处理方式与之前的版本不同。
  # 请访问 https://developer.android.com/guide/topics/ui/splash-screen
  # 以下是 Android 12+ 的特定参数。
  android_12:
    # image 参数设置启动画面图标图片。如果未指定此参数，
    # 将使用应用程序的启动器图标。
    # 请注意，启动画面将被裁剪成屏幕中心的圆形。
    # 带有图标背景的应用程序图标：这应该是 960×960 像素，
    # 并且适合直径为 640 像素的圆圈内。
    # 没有图标背景的应用程序图标：这应该是 1152×1152 像素，
    # 并且适合直径为 768 像素的圆圈内。
    image: assets/logos/splash_logo.png

    # 启动画面背景颜色。
    color: "#ffffff"

    # 应用程序图标背景颜色。
    # icon_background_color: "#ffffff"

    # branding 属性允许您指定在启动画面中用作品牌标识的图片。
    # branding: assets/logos/splash_logo.png

    # image_dark、color_dark、icon_background_color_dark 和 branding_dark 设置当设备
    # 处于深色模式时应用的值。如果未指定，应用程序将使用上面的参数。
    #image_dark: assets/android12splash-invert.png
    #color_dark: "#042a49"
    #icon_background_color_dark: "#eeeeee"

  # android、ios 和 web 参数可以用于禁用在给定平台上生成启动画面。
  #android: false
  #ios: false
  #web: false

  # 可以使用以下参数指定平台特定的图片，这将覆盖相应的参数。
  # 您可能指定所有参数、部分参数或不指定任何参数：
  #color_android: "#42a5f5"
  #color_dark_android: "#042a49"
  #color_ios: "#42a5f5"
  #color_dark_ios: "#042a49"
  #color_web: "#42a5f5"
  #color_dark_web: "#042a49"
  #image_android: assets/splash-android.png
  #image_dark_android: assets/splash-invert-android.png
  #image_ios: assets/splash-ios.png
  #image_dark_ios: assets/splash-invert-ios.png
  #image_web: assets/splash-web.gif
  #image_dark_web: assets/splash-invert-web.gif
  #background_image_android: "assets/background-android.png"
  #background_image_dark_android: "assets/dark-background-android.png"
  #background_image_ios: "assets/background-ios.png"
  #background_image_dark_ios: "assets/dark-background-ios.png"
  #background_image_web: "assets/background-web.png"
  #background_image_dark_web: "assets/dark-background-web.png"
  #branding_android: assets/brand-android.png
  #branding_bottom_padding_android: 24
  #branding_dark_android: assets/dart_dark-android.png
  #branding_ios: assets/brand-ios.png
  #branding_bottom_padding_ios: 24
  #branding_dark_ios: assets/dart_dark-ios.png
  #branding_web: assets/brand-web.gif
  #branding_dark_web: assets/dart_dark-web.gif

  # 可以使用 android_gravity、ios_content_mode 和 web_image_mode 参数设置启动画面图片的位置。
  # 所有参数默认值为 center。
  #
  # android_gravity 可以是以下 Android Gravity 之一（参见
  # https://developer.android.com/reference/android/view/Gravity）：bottom、center、
  # center_horizontal、center_vertical、clip_horizontal、clip_vertical、end、fill、fill_horizontal、
  # fill_vertical、left、right、start 或 top。
  #android_gravity: center
  #
  # ios_content_mode 可以是以下 iOS UIView.ContentMode 之一（参见
  # https://developer.apple.com/documentation/uikit/uiview/contentmode）：scaleToFill、
  # scaleAspectFit、scaleAspectFill、center、top、bottom、left、right、topLeft、topRight、
  # bottomLeft 或 bottomRight。
  #ios_content_mode: center
  #
  # web_image_mode 可以是以下模式之一：center、contain、stretch 和 cover。
  #web_image_mode: center

  # 可以使用 android_screen_orientation 参数在 Android 中设置屏幕方向。
  # 有效参数可以在此处找到：
  # https://developer.android.com/guide/topics/manifest/activity-element#screen
  #android_screen_orientation: sensorLandscape

  # 要隐藏通知栏，请使用 fullscreen 参数。在 Web 中没有效果，因为 Web
  # 没有通知栏。默认值为 false。
  # 注意：与 Android 不同，iOS 不会在应用程序加载时自动显示通知栏。
  #       要显示通知栏，请在 Flutter 应用程序中添加以下代码：
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIMode(SystemUiMode.manual, overlays: [SystemUiOverlay.bottom, SystemUiOverlay.top], );
  #fullscreen: true

  # 如果您更改了 info.plist 文件的名称，您可以使用 info_plist_files 参数指定文件名。
  # 只需删除下面三行中的 # 字符，不要删除任何空格：
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'
